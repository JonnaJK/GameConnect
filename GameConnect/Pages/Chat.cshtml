@page
@using GameConnect.Domain.Entities;
@inject SignInManager<User> SignInManager;
@model ChatModel
@{

}
<head>
    <link rel="stylesheet" href="~/css/chat.css" asp-append-version="true" />
</head>


@if (SignInManager.IsSignedIn(User))
{
    <a asp-page="/Manager/SessionManager/Create" class="btn btn-primary">Start a new conversation!</a>

    <h1>Your conversations:</h1>

    <div class="page">

        @if (Model.Sessions != null)
        {
            <div class="sessions">
                @foreach (var session in Model.Sessions)
                {
                    <div class="sessionPreView">
                        @if (session.Participants != null)
                        {
                            <h5>Chat with: @string.Join(", ", session.Participants)</h5>
                        }
                        @if (session.ChatMessages != null && session.ChatMessages.Any())
                        {
                            @if (session.ChatMessages.OrderByDescending(x => x.Id).FirstOrDefault() != null && session.ChatMessages.OrderByDescending(x => x.Id).FirstOrDefault().User != null)
                            {
                                <h6>Latest message from: @session.ChatMessages.OrderByDescending(x => x.Id).FirstOrDefault().User.UserName</h6>

                                <br />
                            }
                            @if (!string.IsNullOrEmpty(session.ChatMessages.OrderByDescending(x => x.Id).FirstOrDefault().Message))
                            {
                                <p>@session.ChatMessages.OrderByDescending(x => x.Id).FirstOrDefault().Message</p> @*senaste meddelandet i den sessionen*@
                            }
                            @if (Model.UnreadMessageInSessionId.Contains(session.Id))
                            {
                                @*<p>You have @session.ChatMessages.ToList().Where(y => y.UserId != Model.LoggedInUser.Id).Count() unread messages</p>*@
                                <p style="color: red">You have unread messages</p>
                            }
                        }
                        <a asp-route-sessionId="@session.Id" asp-route-showMessages="true" class="btn btn-primary viewChatBtn">View chat</a>
                    </div>
                }
            </div>
        }

        @if (Model.ChatMessages != null && Model.ChatMessages.Count > 0)
        {
            <div class="chatWindow">
                <form method="post">
                    <input type="hidden" asp-for="NewMessage.UserId" value="@Model.LoggedInUser.Id" />
                    <input type="hidden" asp-for="NewMessage.Date" value="@DateTime.Now" />
                    <input type="hidden" asp-for="NewMessage.SessionId" value="@Model.ChatMessages[0].SessionId" />
                    <textarea asp-for="NewMessage.Message" placeholder="New message" maxlength="200"></textarea>
                    <button type="submit" class="btn btn-success">Send</button>
                    <a asp-route-settingsSessionId="@Model.ChatMessages[0].SessionId" class="btn btn-secondary settingsBtn">Settings</a>
                </form>

                @foreach (var message in Model.ChatMessages.OrderByDescending(x => x.Date))
                {
                    @if (Model.ReadBy.ContainsValue(message.Id))
                    {
                        <span>Read by: @string.Join(", ", Model.ReadBy.Keys)</span>
                    }
                    @if (message.UserId == Model.LoggedInUser.Id)
                    {
                        <div class="messageWindow myMessage">
                            @if (message.User != null)
                            {
                                <span class="messageHeader">@message.User.UserName | @message.Date</span>
                            }
                            <br />
                            <span>@message.Message</span>
                        </div>

                    }
                    else
                    {
                        <div class="messageWindow otherMessage">
                            @if (message.User != null)
                            {
                                <span class="messageHeader">@message.User.UserName | @message.Date</span>
                            }
                            <br />
                            <span>@message.Message</span>
                        </div>
                    }
                }

                <div class="settingsDiv">
                    @if (Model.ShowSettings)
                    {
                        <a asp-route-settingsSessionId="@Model.ChatMessages[0].SessionId" asp-route-closeSettings="true" class="btn btn-primary settingsBtn">Close Settings</a>

                        <hr />

                        <div class="settingsWindow">

                            @if (Model.IsSessionCreator)
                            {
                                <a asp-route-deleteSessionId="@Model.ChatMessages[0].SessionId" class="btn btn-primary">Delete chat</a>

                                <a asp-page="/Manager/SessionManager/Edit" asp-route-id="@Model.ChatMessages[0].SessionId" class="btn btn-primary">Edit participants</a>
                            }
                            else
                            {
                                <a asp-route-removeUserId="@Model.LoggedInUser.Id" asp-route-settingsSessionId="@Model.ChatMessages[0].SessionId" class="btn btn-primary">Leave chat</a>
                            }
                        </div>

                        <hr />
                    }
@*                    else
                    {
                        <a asp-route-settingsSessionId="@Model.ChatMessages[0].SessionId" class="btn btn-primary settingsBtn">Chat Settings</a>
                    }*@
                </div>


            </div>
        }
        else if (Model.IsNoMessagesToShow)
        {
            <div class="messageWindow otherMessage">There are no messages in this session, cretor must delete the session</div>
        }
    </div>
}

else
{
    <div class="alert alert-danger">You have to log in to access this page!</div>
}

